package form_test

import (
	"bytes"
	"compress/gzip"
	"io/ioutil"
	"log"
	"net/http"
	"strconv"
	"testing"
)

func TestUpdateAlpineJS(t *testing.T) {
	url := "https://unpkg.com/alpinejs@3.10.2/dist/cdn.min.js"
	resp, err := http.Get(url)
	if err != nil {
		t.Fatal(err)
	}
	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		t.Fatal(err)
	}
	defer resp.Body.Close()
	var b bytes.Buffer
	gz := gzip.NewWriter(&b)
	if _, err := gz.Write(body); err != nil {
		log.Fatal(err)
	}
	if err := gz.Close(); err != nil {
		log.Fatal(err)
	}
	var buf bytes.Buffer
	buf.WriteString("package form\n\n")
	buf.WriteString("// Generated by: TestUpdateAlpineJS\n")
	buf.WriteString("// Gzipped Contents of " + url + "\n\n")
	buf.WriteString("var AlpineJS = []byte{")
	bb := b.Bytes()
	bt := len(bb)
	for i, v := range bb {
		buf.WriteString(strconv.Itoa(int(v)))
		if i < bt-1 {
			buf.WriteRune(',')
		}
		if i > 0 && i%50 == 0 {
			buf.WriteRune('\n')
		}
	}
	buf.WriteRune('}')
	ioutil.WriteFile("alpinejs.go", buf.Bytes(), 0644)
	t.Errorf("Updated AlpineJS %d", len(b.Bytes()))
}
